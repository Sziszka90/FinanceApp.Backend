name: Build and Deploy to AKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upgrade Azure Container Apps extension
        run: |
          az extension add --name containerapp --upgrade --yes

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: List environment files
        run: |
          ls ./FinanceApp.Web/src/environments

      - name: Generate environment.prod.ts from template
        run: |
          export API_URL="${{ vars.BACKEND_URL }}"
          envsubst < src/environments/environment.prod.template.ts > src/environments/environment.prod.ts
        working-directory: ./FinanceApp.Web

      - name: Build and Push Frontend image
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/$OWNER/finance-app-frontend:latest ./FinanceApp.Web
          docker push ghcr.io/$OWNER/finance-app-frontend:latest

      - name: Build and Push .NET image
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/$OWNER/finance-app-backend:latest .
          docker push ghcr.io/$OWNER/finance-app-backend:latest

      - name: Update Azure Container App (Backend)
        run: |
          set -x
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          az containerapp update \
            --name finance-app-backend \
            --resource-group projects \
            --image ghcr.io/$OWNER/finance-app-backend:latest \
            --set-env-vars \
              "ConnectionStrings__MsSql=${{ secrets.DB_CONNECTION_STRING }}" \
              "ExchangeRateSettings__ApiKey=${{ secrets.API_KEY }}" \
              "AuthenticationSettings__SecretKey=${{ secrets.SECRET_KEY }}" \
              "AuthenticationSettings__Audience=${{ vars.AUDIENCE }}" \
              "AuthenticationSettings__Issuer=${{ vars.ISSUER }}"
