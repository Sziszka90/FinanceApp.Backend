name: Build and Deploy to AKS

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'production'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upgrade Azure Container Apps extension
        run: |
          az extension add --name containerapp --upgrade --yes

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: List environment files
        run: |
          ls ./FinanceApp.Web/src/environments

      - name: Generate environment.prod.ts from template
        run: |
          #export API_URL="${{ vars.BACKEND_URL }}"
          envsubst < src/environments/environment.prod.template.ts > src/environments/environment.prod.ts
        working-directory: ./FinanceApp.Web

      - name: Set image tag
        id: vars
        run: echo "tag=${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT

      - name: Build and Push Frontend image
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/$OWNER/finance-app-frontend:${{ steps.vars.outputs.tag }} -f ./FinanceApp.Web/FrontendService.Dockerfile ./FinanceApp.Web
          docker push ghcr.io/$OWNER/finance-app-frontend:${{ steps.vars.outputs.tag }}

      - name: Build and Push .NET image
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/$OWNER/finance-app-backend:${{ steps.vars.outputs.tag }} -f BackendService.Dockerfile .
          docker push ghcr.io/$OWNER/finance-app-backend:${{ steps.vars.outputs.tag }}

      - name: Build and Push Gateway image
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/$OWNER/finance-app-gateway:${{ steps.vars.outputs.tag }} -f GatewayService.Dockerfile .
          docker push ghcr.io/$OWNER/finance-app-gateway:${{ steps.vars.outputs.tag }}

      - name: Update Azure Container App (Backend)
        run: |
          set -x
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          az containerapp update \
            --name finance-app-backend \
            --resource-group projects \
            --image ghcr.io/$OWNER/finance-app-backend:${{ steps.vars.outputs.tag }} \
            --set-env-vars \
              ConnectionStrings__MsSql='${{ secrets.DB_CONNECTION_STRING }}' \
              LLMClientSettings__ApiKey='${{ secrets.OPEN_AI_API_KEY }}' \
              AuthenticationSettings__SecretKey='${{ secrets.SECRET_KEY }}' \
              AuthenticationSettings__Audience='${{ vars.AUDIENCE }}' \
              AuthenticationSettings__Issuer='${{ vars.ISSUER }}' \
              SmtpSettings__SmtpHost='${{ vars.SMTP_HOST }}' \
              SmtpSettings__SmtpPort='${{ vars.SMTP_PORT }}' \
              SmtpSettings__SmtpUser='${{ secrets.SMTP_USER }}' \
              SmtpSettings__SmtpPass='${{ secrets.SMTP_PASSWORD }}' \
              SmtpSettings__FromEmail='${{ secrets.SMTP_FROM_EMAIL }}'


      - name: Update Azure Container App (Frontend)
        run: |
          set -x
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          az containerapp update \
            --name finance-app-frontend \
            --resource-group projects \
            --image ghcr.io/$OWNER/finance-app-frontend:${{ steps.vars.outputs.tag }}

      - name: Update Azure Container App (Gateway)
        run: |
          set -x
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          az containerapp update \
            --name finance-app-gateway \
            --resource-group projects \
            --image ghcr.io/$OWNER/finance-app-gateway:${{ steps.vars.outputs.tag }}
